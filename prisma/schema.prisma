generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  address   String    @default("")
  createdAt DateTime  @default(now())
  isAdmin   Boolean   @default(false)
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  orders    Order[]
}

model Product {
  id        Int       @id @default(autoincrement())
  name      String
  price     Int
  image     String
  flavor    String
  stock     Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  orders    Order[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int
  rate      Int?
  userId    Int
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Banner {
  id        Int      @id @default(autoincrement())
  name      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        Int           @id @default(autoincrement())
  userId    Int
  productId Int
  qty       Int           @default(1)
  status    OrderStatus   @default(PURCHASED)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  payment   PaymentMethod @default(COD)
  orderType orderType     @default(PICKUP)
  comments  Comment[]
  product   Product       @relation(fields: [productId], references: [id])
  user      User          @relation(fields: [userId], references: [id])
}

enum OrderStatus {
  PURCHASED
  PROCESS
  COMPLETED
  CANCELLED
}

enum PaymentMethod {
  QRIS
  COD
}

enum orderType {
  PICKUP
  DELIVERY
}
